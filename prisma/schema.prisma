// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

// Models
model UserVerificationKeys {
    id    String @id @default(uuid())
    token String
    email String
}

model User {
    id       String @id @default(uuid())
    email    String @unique
    username String

    mqtt_user String
    mqtt_pass String

    // Relations
    managed_device Device[]
}

model Device {
    id          String @id @default(uuid())
    name        String
    status      Int    @default(-1)
    device_key  String @unique
    device_pass String @unique

    last_online DateTime?
    created_at  DateTime  @default(now())

    // Relations
    controlled_controllables Controllable[]

    user User @relation(fields: [user_email], references: [email], onDelete: Cascade)
    user_email String
}

model Controllable {
    id    String @id @default(uuid())
    name  String
    value String @default("")

    // Relations
    controllable_category ControllableCategory @relation(fields: [category], references: [category_name])
    category              String

    controller_device Device @relation(fields: [device_id], references: [id], onDelete: Cascade)
    device_id         String

    topic_name String

    @@unique([name, device_id], map: "name_device_id")
}

model ControllableCategory {
    id            String @id @default(uuid())
    category_name String @unique

    // Relations
    controllables Controllable[]
}